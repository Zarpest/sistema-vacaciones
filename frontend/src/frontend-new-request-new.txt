// frontend/src/pages/employee/NewRequest.js
import React, { useState, useContext } from 'react';
import { useNavigate } from 'react-router-dom';
import axios from 'axios';
import { AuthContext } from '../../context/AuthContext';

const NewRequest = () => {
  const [tipo, setTipo] = useState('vacaciones');
  const [fechaInicio, setFechaInicio] = useState('');
  const [fechaFin, setFechaFin] = useState('');
  const [dias, setDias] = useState('');
  const [horas, setHoras] = useState('');
  const [motivo, setMotivo] = useState('');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  
  const { refreshUserInfo } = useContext(AuthContext);
  const navigate = useNavigate();
  
  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setError(null);
    
    try {
      await axios.post('/solicitudes', {
        tipo,
        fecha_inicio: fechaInicio,
        fecha_fin: fechaFin,
        dias: tipo === 'vacaciones' ? parseFloat(dias) : null,
        horas: tipo === 'permiso_especial' ? parseFloat(horas) : null,
        motivo
      });
      
      // Actualizar información del usuario
      await refreshUserInfo();
      
      // Redireccionar al historial
      navigate('/employee/history');
    } catch (err) {
      setError(err.response?.data?.error || 'Error al crear la solicitud');
    } finally {
      setLoading(false);
    }
  };
  
  // Calcular días automáticamente al cambiar fechas
  const calcularDias = () => {
    if (fechaInicio && fechaFin) {
      const inicio = new Date(fechaInicio);
      const fin = new Date(fechaFin);
      
      // Calcular diferencia en días
      const diffTime = Math.abs(fin - inicio);
      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1; // +1 para incluir el día final
      
      // Ajustar para fines de semana (simplificado)
      let diasLaborables = 0;
      const currentDate = new Date(inicio);
      
      while (currentDate <= fin) {
        const dayOfWeek = currentDate.getDay();
        
        // Si no es fin de semana (0 = domingo, 6 = sábado)
        if (dayOfWeek !== 0 && dayOfWeek !== 6) {
          diasLaborables++;
        }
        
        currentDate.setDate(currentDate.getDate() + 1);
      }
      
      setDias(diasLaborables);
    }
  };
  
  return (
    <div>
      <h2 className="text-2xl font-bold mb-6">Nueva Solicitud</h2>
      
      {error && (
        <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4">
          {error}
        </div>
      )}
      
      <form onSubmit={handleSubmit} className="bg-white p-6 rounded-lg shadow-md">
        <div className="mb-4">
          <label className="block text-gray-700 font-semibold mb-2">
            Tipo de solicitud
          </label>
          <div className="flex">
            <label className="inline-flex items-center mr-6">
              <input
                type="radio"
                value="vacaciones"
                checked={tipo === 'vacaciones'}
                onChange